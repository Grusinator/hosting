version: '3.8'

services:
  traefik:
    image: traefik:v2.5
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "${TRAEFIK_HTTP_PORT}:80"
      - "${TRAEFIK_HTTPS_PORT}:443"
      - "${TRAEFIK_ADMIN_PORT}:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.traefik.rule=Host(`${TRAEFIK_DOMAIN}`)"
        - "traefik.http.services.traefik.loadbalancer.server.port=8080"
    configs:
      - source: env_file
        target: /app/.env

  registry:
    image: registry:2
    volumes:
      - registry_data:/var/lib/registry
    environment:
      REGISTRY_HTTP_SECRET: ${REGISTRY_HTTP_SECRET}
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.registry.rule=Host(`${REGISTRY_DOMAIN}`)"
        - "traefik.http.services.registry.loadbalancer.server.port=5000"
    configs:
      - source: env_file
        target: /app/.env

  registry-ui:
    image: joxit/docker-registry-ui:static
    environment:
      - REGISTRY_URL=http://registry:5000
      - SINGLE_REGISTRY=true

    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.registry-ui.rule=Host(`${REGISTRY_UI_DOMAIN}`)"
        - "traefik.http.services.registry-ui.loadbalancer.server.port=80"
    configs:
      - source: env_file
        target: /app/.env

volumes:
  registry_data:

configs:
  env_file:
    file: .env